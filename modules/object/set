//
// set object
//
// Neil Gershenfeld
// (c) Massachusetts Institute of Technology 2018
//
// This work may be reproduced, modified, distributed, performed, and
// displayed for any purpose, but must acknowledge the mods
// project. Copyright is retained and must be preserved. The work is
// provided as is; no warranty is provided, and users accept all
// liability.
//
// closure
//
(function(){
//
// module globals
//
var mod = {}
//
// name
//
var name = 'set object'
//
// initialization
//
var init = function() {
   //
   add_output('settings 0')
   add_variable('variable 0','var00')
   mod.var00.value = 'value 00'
   add_variable('variable 1','var01')
   mod.var01.value = 'value 01'
   add_event()
   //
   }
//
// inputs
//
var inputs = {}
//
// outputs
//
var outputs = {
   settings:{type:'',
      event:function(vars){
         mods.output(mod,'settings',vars)
         }
      }
   }
//
// interface
//
var interface = function(div){
   mod.div = div
   }
//
// local functions
//
function add_output() {
   if (mod.output == undefined) {
      mod.output = []
      mod.button = []
      mod.label = []
      mod.name = []
      mod.value = []
      }
   var btn = document.createElement('button')
      btn.style.padding = mods.ui.padding
      btn.style.margin = 1
      var span = document.createElement('span')
      var text = document.createTextNode('')
         mod.output.push(text)
         span.appendChild(text)
      mod.label.push(span)
      btn.appendChild(span)
      mod.button.push(btn)
      mod.div.appendChild(btn)
   mod.div.appendChild(document.createElement('br'))
   mod.name.push([])
   mod.value.push([])
   }
function add_variable() {
   mod.name[0][0].nodeValue = 'variable 00'
   mod.output[0].nodeValue = 'settings 0'
   var text = document.createTextNode('')
      mod.name[mod.output.length-1].push(text)
      mod.div.appendChild(text)
   mod.div.appendChild(document.createTextNode(': '))
   input = document.createElement('input')
      input.type = 'text'
      input.size = 10
      mod.value[mod.output.length-1].push(input)
      mod.div.appendChild(input)
   mod.div.appendChild(document.createElement('br'))
   }
function add_event() {
   mod.button[mod.button.length-1].addEventListener('click',function() {
      var vars = {}
      for (var v = 0; v < mod.name[mod.name.length-1].length; ++v)
         console.log(v)
         //mod.output[mod.texts[s][v].nodeValue] = mod.inputs[s][v].value
      //outputs.settings.event(vars)
      //for (var i = 0; i < mod.label.length; ++i)
      //   mod.labels[i].style.fontWeight = 'normal'
      //mod.labels[s].style.fontWeight = 'bold'
      })
   mod.out += 1
   }
//
// return values
//
return ({
   mod:mod,
   name:name,
   init:init,
   inputs:inputs,
   outputs:outputs,
   interface:interface
   })
}())
