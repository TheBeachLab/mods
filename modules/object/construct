//
// construct object
//
// Neil Gershenfeld 
// (c) Massachusetts Institute of Technology 2018
// 
// This work may be reproduced, modified, distributed, performed, and 
// displayed for any purpose, but must acknowledge the mods
// project. Copyright is retained and must be preserved. The work is 
// provided as is; no warranty is provided, and users accept all 
// liability.
//
// closure
//
(function(){
//
// module globals
//
var mod = {}
//
// name
//
var name = 'construct object'
//
// initialization
//
var init = function() {
   mod.in0.value = '{"x":0,"y":1}'
   mod.in1.value = '{}'
   mod.out.value = '{"f":x+y}'
   }
//
// inputs
//
var inputs = {
   input0:{type:'',label:'input 0',
      event:function(evt) {
         mod.in0.value = JSON.stringify(evt.detail)
         construct_output()
         outputs.output0.event(evt.detail)
         }},
   input1:{type:'',label:'input 1',
      event:function(evt) {
         mod.in1.value = JSON.stringify(evt.detail)
         construct_output()
         outputs.output1.event(evt.detail)
         }}}
//
// outputs
//
var outputs = {
   output0:{type:'',label:'input 0',
      event:function(arg){
         mods.output(mod,'output0',arg)
         }},
   output1:{type:'',label:'input 1',
      event:function(arg){
         mods.output(mod,'output1',arg)
         }},
   out:{type:'',label:'output',
      event:function(){
         mods.output(mod,'output',mod.value.value)
         }}}
//
// interface
//
var interface = function(div){
   mod.div = div
   div.appendChild(document.createTextNode('input 0:'))
   div.appendChild(document.createElement('br'))
   var text = document.createElement('textarea')
      text.setAttribute('rows',2)
      text.setAttribute('cols',mods.ui.cols)
      text.addEventListener('input',function(evt) {
         format_string()
         })
      div.appendChild(text)
      mod.in0 = text
   div.appendChild(document.createElement('br'))
   div.appendChild(document.createTextNode('input 1:'))
   div.appendChild(document.createElement('br'))
   var text = document.createElement('textarea')
      text.setAttribute('rows',2)
      text.setAttribute('cols',mods.ui.cols)
      div.appendChild(text)
      mod.in1 = text
   div.appendChild(document.createElement('br'))
   div.appendChild(document.createTextNode('output:'))
   div.appendChild(document.createElement('br'))
   var text = document.createElement('textarea')
      text.setAttribute('rows',2)
      text.setAttribute('cols',mods.ui.cols)
      div.appendChild(text)
      mod.out = text
   }
//
// local functions
//
function construct_output() {
   var in0 = JSON.parse(mod.in0.value)
   var in1 = JSON.parse(mod.in1.value)
   var out = mod.out.value
   console.log(out)
   console.log(eval(out))
   function construct(expression) {
      return `${expression}`
      }
   }
//
// return values
//
return ({
   name:name,
   init:init,
   inputs:inputs,
   outputs:outputs,
   interface:interface
   })
}())
